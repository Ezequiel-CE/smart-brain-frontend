{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/cerebro.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecongnition/FaceRecongnition.js","components/SingIn/SingIn.js","components/Register/Register.js","ConteinerComponents/App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","cerebro","alt","paddingTop","ImageLinkForm","onInputChange","onSubmitButton","type","onChange","Rank","name","entries","FaceRecongnition","imageUrl","Facebox","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","state","SignInEmail","SignInPassword","onEmailChangeHandler","event","setState","target","value","onPasswordChangeHandler","onSubmitSignInHandler","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","props","loadUser","this","htmlFor","href","Component","Register","onNameChangeHandler","onSubmitEventHandler","particleOptions","intialState","input","box","route","joined","App","loadUserHandler","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayBox","onInputChangeHandler","onSubmitPictureEventHandler","count","Object","assign","catch","console","log","err","onRouteChangeHandler","params","SingIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.138638d7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Navigation = ({onRouteChange,isSignedIn}) => {\r\n\r\n    \r\n        if(isSignedIn){\r\n            return(<nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n                    <p \r\n                    onClick={()=>onRouteChange('signout') } \r\n                    className='f3 link white pa3 pointer'>Sing Out</p>\r\n                    </nav>);\r\n        }else{\r\n            return(\r\n                    <nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n                    <p \r\n                    onClick={()=>onRouteChange('signin') } \r\n                    className='f3 link white pa3 pointer'>Sing In</p><p \r\n                    onClick={()=>onRouteChange('register') } \r\n                    className='f3 link white pa3 pointer'>Register</p>\r\n                    </nav>\r\n            );\r\n                    \r\n                 \r\n\r\n        }\r\n        \r\n    \r\n\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/cerebro.8f6a991b.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport cerebro from './cerebro.png';\r\n\r\nconst Logo = () => {\r\n\r\n    return(\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 40 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\"> \r\n                    <img  src={cerebro} alt='logo' style={{paddingTop: '5px'}} />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange,onSubmitButton}) => {\r\n\r\n    return (<div>\r\n        <p className='f4 white'>\r\n            {'This Magic Brain will detect faces in your pictures. give it a try'}\r\n        </p>\r\n        <div className='center'>\r\n            <div className='form center pa4 be3 shadow-5'>\r\n                <input className='f3 pa2 w-70 center' \r\n                    type='text' \r\n                    onChange={onInputChange} />\r\n                <button className='w-30 grow f4 link ph3 pv2 deb white bg-light-purple'\r\n                 onClick={onSubmitButton}>Detect</button>\r\n            </div>    \r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({name,entries}) => {\r\n\r\n    return(\r\n        <div>\r\n            <div className='white f2'>\r\n                {`${name}, your current entry count is ....`}\r\n            </div>\r\n            \r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecongnition.css';\r\n\r\n\r\nconst FaceRecongnition = ({imageUrl,Facebox}) => {\r\n\r\n     \r\n    return(\r\n        <div className='center ma'>\r\n            <div className='absolute mt4'>\r\n                <img id='inputImg' src={imageUrl} alt=\"\" width='500px' height='auto'/> \r\n                <div className='bounding-box' style={{top: Facebox.topRow, right: Facebox.rightCol, bottom: Facebox.bottomRow, left: Facebox.leftCol}}></div>\r\n            </div>\r\n        </div>  \r\n        );\r\n\r\n}\r\n\r\n\r\nexport default FaceRecongnition;","import React,{Component} from 'react';\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n  state = {\r\n    SignInEmail : '',\r\n    SignInPassword : ''\r\n  }\r\n\r\n  onEmailChangeHandler = (event) => {\r\n    this.setState({SignInEmail : event.target.value})\r\n  }\r\n\r\n  onPasswordChangeHandler = (event) => {\r\n    this.setState({SignInPassword : event.target.value})\r\n  }\r\n\r\n  onSubmitSignInHandler = () =>{\r\n    fetch('https://evening-brushlands-59335.herokuapp.com/signin',{\r\n      method : 'post',\r\n      headers : {'Content-type' : 'application/json'},\r\n      body : JSON.stringify({\r\n        email : this.state.SignInEmail,\r\n        password : this.state.SignInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user =>{\r\n      if(user.id){\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home')\r\n      }\r\n    } )\r\n    \r\n  }\r\n\r\n\r\n  render(){\r\n    const {onRouteChange} = this.props;\r\n    return(\r\n      <article className=\"br3 bg-white ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">    \r\n          <main className=\"pa4 black-80\">\r\n              <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                  <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                  <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input \r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" \r\n                  type=\"email\" \r\n                  name=\"email-address\"  \r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChangeHandler} />\r\n                  </div>\r\n                  <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input \r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" \r\n                  type=\"password\" \r\n                  name=\"password\"  \r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChangeHandler} />\r\n                  </div>\r\n                  \r\n              </fieldset>\r\n              <div className=\"\">\r\n                  <input onClick={this.onSubmitSignInHandler} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                  <p onClick={()=>onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n                </div>\r\n              </div>\r\n      </main>\r\n      </article>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default SignIn;","import React,{Component} from 'react';\r\n\r\nclass Register extends Component{\r\n\r\n    state={\r\n        name: '',\r\n        email: '',\r\n        password:''\r\n    }\r\n\r\n    onEmailChangeHandler = (event) => {\r\n        this.setState({email : event.target.value})\r\n      }\r\n    \r\n    onPasswordChangeHandler = (event) => {\r\n        this.setState({password : event.target.value})\r\n      }\r\n    \r\n    onNameChangeHandler = (event) =>{\r\n        this.setState({name : event.target.value})\r\n    }\r\n\r\n    onSubmitEventHandler = () =>{\r\n        fetch('https://evening-brushlands-59335.herokuapp.com/register',{\r\n        method : 'post',\r\n        headers : {'Content-type' : 'application/json'},\r\n        body : JSON.stringify({\r\n            email : this.state.email,\r\n            password : this.state.password,\r\n            name : this.state.name\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user =>{\r\n      if(user.id){\r\n        this.props.loadUser(user)  \r\n        this.props.onRouteChange('home')\r\n      }\r\n    } )\r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <article className=\"br3 ba bg-white b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">    \r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" \r\n                        type=\"text\" \r\n                        name=\"name\"  \r\n                        id=\"name\"\r\n                        onChange={this.onNameChangeHandler} />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\"\r\n                        onChange={this.onEmailChangeHandler} />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-gray hover-white w-100\"\r\n                         type=\"password\"\r\n                         name=\"password\"\r\n                         id=\"password\"\r\n                         onChange={this.onPasswordChangeHandler} />\r\n                        </div>\r\n                        \r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={this.onSubmitEventHandler} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"register\" />\r\n                    </div>\r\n                    </div>\r\n            </main>\r\n        </article>\r\n    );\r\n    }\r\n\r\n       \r\n}\r\n\r\n\r\nexport default Register;\r\n\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from '../components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from '../components/FaceRecongnition/FaceRecongnition';\nimport SingIn from '../components/SingIn/SingIn'\nimport Register from '../components/Register/Register';\n\n\n\n// configuracion de las particulas del fondo\nconst particleOptions={\n  \"particles\": {\n      \"number\": {\n          \"value\": 50,\n          \"density\":{\n            \"enable\": true,\n            \"value_area\":800\n          }\n      },\n      \"size\": {\n          \"value\": 3\n      }\n  },\n  \n};\n\n//estado inicial de la aplicacion\nconst intialState = {\n  input:'',\n  imageUrl:'',\n  box:{},\n  route:'signin',\n  isSignedIn: false,\n  user:{\n      id: '',\n      name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n  }\n}\n\nclass App extends Component {\n\n  state= intialState;\n\n  //metodo que carga al user\n  \n  loadUserHandler = (data) =>{\n    this.setState({\n      user:{\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }\n    })\n\n  }\n\n  // metodo que recibe la respuesta de la app de clary y debuelve un objeto con la posicion del cuadro\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImg');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    \n    return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - (clarifaiFace.right_col * width),\n          bottomRow: height - (clarifaiFace.bottom_row * height) \n            };\n\n  }\n//metodo que muesta la el cuadro en la cara\n  displayBox = (box) => {\n    this.setState({box: box})\n  }\n//metodo que sobrescribe el state del input al escribir\n  onInputChangeHandler = (event) =>{\n    this.setState({ input:event.target.value})\n\n  }\n// realizamos el request al apretar el boton\n  onSubmitPictureEventHandler = (event) => {\n\n    this.setState({imageUrl : this.state.input})\n    \n    fetch('https://evening-brushlands-59335.herokuapp.com/imageurl',{\n          method : 'post',\n          headers : {'Content-type' : 'application/json'},\n          body : JSON.stringify({\n              input: this.state.input\n        })\n      })\n    .then(response => response.json())\n\n    .then(response =>{\n      // si clarifi nos manda una respuesta , la utilizamos para cambiar el contador\n      if(response){\n        fetch('https://evening-brushlands-59335.herokuapp.com/image',{\n          method : 'put',\n          headers : {'Content-type' : 'application/json'},\n          body : JSON.stringify({\n              id: this.state.user.id\n        })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user,{entries : count}))\n      })\n      .catch(console.log)\n      }\n      // realiza la identificacion de la cara\n      this.displayBox(this.calculateFaceLocation(response))})\n    .catch(err => console.log(err));\n  }\n\n\n  // metodo que cambia el route para entrar en la app\n\nonRouteChangeHandler = (route) => {\n\n  if(route === 'signout'){\n    \n    this.setState(intialState)\n    \n  }else if (route ==='home'){\n    this.setState({isSignedIn:true})\n  }\n\n  this.setState({route : route});\n}\n\n\n\n\n  render(){\n\n    const {isSignedIn, imageUrl, route, box} =this.state;\n\n    return (\n    <div className=\"App\">\n      <Particles \n        className='particles'\n        params={particleOptions} />\n      <Navigation \n      onRouteChange={this.onRouteChangeHandler}\n      isSignedIn={isSignedIn}/>\n      { route === 'home' \n      ?<div>\n      <Logo />\n      <Rank\n      name={this.state.user.name}\n      entries={this.state.user.entries} />\n      <ImageLinkForm \n        onInputChange={this.onInputChangeHandler}\n        onSubmitButton={this.onSubmitPictureEventHandler}/>\n      <FaceRecognition\n        imageUrl={imageUrl}\n        Facebox={box} />\n        </div> \n      \n      :(route === 'signin')?\n      <SingIn \n      onRouteChange={this.onRouteChangeHandler}\n      loadUser={this.loadUserHandler} />\n      :\n      <Register\n      onRouteChange={this.onRouteChangeHandler}\n      loadUser={this.loadUserHandler} />\n    }\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ConteinerComponents/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}